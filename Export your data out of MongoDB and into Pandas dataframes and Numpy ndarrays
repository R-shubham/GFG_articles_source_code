python -m pip install pymongoarrow
python -m pip install pymongo[srv]

# If you are going to use a locally running MongoDB instance then run the "mongod" command in a separate terminal window to start the MongoDB process. 

import pymongo
import pymongoarrow 
import pyarrow
from pymongo import MongoClient


# If you are using an Atlas cluster, input your Atlas connection string as an argument to the ‘MongoClient’ function. 

client = MongoClient('Enter your Atlas connection string here')

# If you are running a mongod process on your local machine, you can simply run the following command to connect to your MongoDB instance
# which is running on localhost and listening on port 27017:

client = MongoClient( ‘localhost’ , 27017)

db = client.test_database
col = db.test_collection

from datetime import datetime
col.insert_many([{'_id': 1, 'measure': 43, “status”:”active”, 'installed_on': datetime(2022, 1, 8, 3, 43, 12)}, {'_id': 2, 'measure': 32, “status”:”active”, 'installed_on': datetime(2022, 2, 2, 11, 43, 27)}, {'_id': 3, 'measure': 62, “status”:”inactive”, 'installed_on': datetime(2022, 3, 12, 3, 53, 12)}, {'_id': 4, 'measure': 59, “status”:”active”, 'installed_on': datetime(2022, 4, 8, 3, 22, 45)}])

from pymongoarrow.monkey import patch_all
patch_all()

from pymongoarrow.api import Schema
schema = Schema({'_id': int, 'measure': float, 'status': pyarrow.string(), 'installed_on': datetime})

# Load MongoDB result set as a Pandas dataframe:
import pandas as pd
df = col.find_pandas_all({'measure': {'$gt': 20}}, schema=schema)

# Let's print the dataframe
df

# Load MongoDB result set as a Numpy ndarrays:
import numpy as np
npa = col.find_numpy_all({'measure': {'$gt': 20}}, schema=schema)

# Let's print the numpy array to visualise it
npa
